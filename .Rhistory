demo(graphics)
demo(graphic)
demo(graphics)
demo(perse)
data <- read.delim("merged-multirace.txt")
data <- read.delim("/Users/brown/Documents/Berkeley/dataviz-fall-2013/maps-intro")
setwd("/Users/brown/Documents/Berkeley/dataviz-fall-2013/maps-intro/merged-multirace.txt")
setwd("/Users/brown/Documents/Berkeley/dataviz-fall-2013/maps-intro/")
data <- read.delim("merged-multirace.txt")
head
head(data)
dim(data)
footer(data)
tail(data)
unique(data$year)
min(data$pop)
min(data$totalpop)
max(data$totalpop)
data[order(data$pctwhite),]
head(data)
subset(data, pctwhite == max(data$pctwhite))
y2020 <- subset(data, year == 2020)
subset(ydata, pctwhite == max(data$pctwhite))
subset(y2020, pctwhite == max(data$pctwhite))
subset(y2020, pctwhite == max(y2020$pctwhite))
subset(y2020, pctblack == min(y2020$pctblack))
y1980 <- subset(data, year == 1980)
subset(y1980, pctasian == min(y1980$pctasian))
subset(y1980, pctasian == max(y1980$pctasian))
data
sf <- subset(data, county == "San Francisco")
sf
?plot
plot(sf$year, sf$pcthispanic, type="l")
plot(sf$year, sf$pcthispanic)
plot(sf$year, sf$pcthispanic, type="s")
sort(sf, year)
data[order(data$pctwhite),]
sf <- sf[order(sf$year),]
plot(sf$year, sf$pcthispanic, type="l")
plot(sf$year, sf$pcthispanic, type="l", lwd=3)
?plot
plot(sf$year, sf$pcthispanic, type="l", lwd=3, col = "red")
plot(sf$year, sf$pcthispanic, type="l", lwd=3, ylim=c(0, 1))
plot(sf$year, sf$pcthispanic, type="l", lwd=3, ylim=c(0, max(data$pcthispanic)))
data$hispanic_pop <- data$pcthispanic * data$totalpop
head(data)
data$white_pop <- data$pctwhite * data$totalpop
data$black_pop <- data$pctblack * data$totalpop
data$amind_pop <- data$pctamind * data$totalpop
data$asian_pop <- data$pctasian * data$totalpop
data$other_pop <- data$pctother * data$totalpop
head(data)
min(data$hispanic_pop)
42
max(county == data$hispanic_pop)
subset(y1980, pctasian == max(y1980$pctasian))
subset(county, hispanicpop == max(data$hispanic_pop))
max(data$hispanic_pop)
subset(data, hispanic_pop == max(data$hispanicpop))
subset(data, hispanic_pop == max(data$hispanic_pop))
y2010 <- subset(data, year == 2010)
subset(y2010, hispanic_pop == max(y2010$hispanic_pop))
unieq
ca_hispanic_pop <- aggregate(data$hispanic_pop, list(data$year), sum)
names(ca_hispanic_pop)
names(ca_hispanic_pop) <- c("year", "tot_hisp_pop")
data <- data[order(data$hispanic_pop, decreasing=1),]
head(data)
?aggregate
aggregate(data$hispanic_pop, list(data$year), sum)
hispanics_by_year <- aggregate(data$hispanic_pop, list(data$year), sum)
head(hispanics_by_year)
names(hispanics_by_year)
names(hispanics_by_year) <- c("year", "tot_hisp_pop")
hispanics_by_year
aggregate(data$totalpop, list(data$year), sum)
total_ca_pop <- aggregate(data$totalpop, list(data$year), sum)
head(total_ca_pop)
names(total_ca_pop) <- c("year", "tot_ca_pop")
head(total_ca_pop)
hispanics_by_year
total_ca_pop <- aggregate(data$totalpop, list(data$year), sum)
aggregate((data$hispanics_by_year/data$total_ca_pop, list(data$year), mean)
sf <- subset(data, county == "San Francisco")
sf <- sf[order(sf$year),]
plot(sf$pcthispanic, type = "1", ylim=c(0, max(data$pcthispanic)))
state_totals <- merge(total_ca_pop, ca_hispanic_pop, by="year")
state_totals <- merge(total_ca_pop, hispanics_by_year, by="year")
merge(total_ca_pop, hispanics_by_year, by="year")
merge(hispanics_by_year, total_ca_pop, by="year")
?merge
total_ca_pop
hispanics_by_year
merge(hispanics_by_year, total_ca_pop, by="year")
names(total_ca_pop) <- c("year", "tot_ca_pop")
merge(hispanics_by_year, total_ca_pop, by="year")
state_totals$pcthisp <- state_totals$tot_hisp_pop/state_totals$tot_ca_pop
state_totals
state_totals <- merge(hispanics_by_year, total_ca_pop, by="year")
state_totals$pcthisp <- state_totals$tot_hips_pop/state_totals$tot_ca_pop
state_totals$pcthispanic <- state_totals$tot_hisp_pop/state_totals$tot_ca_pop
state_totals
plot(state_totals$year, state_totals$pcthisp, type = "1", ylim=c(0, max(state_totals$pcthisp)))
plot(state_totals$year, state_totals$pcthisp, type = "l", ylim=c(0, max(state_totals$pcthisp)))
lines(sf$year, sf$pcthisp)
plot(state_totals$year, state_totals$pcthisp, type = "l", ylim=c(0, max(state_totals$pcthisp, col="red")))
plot(state_totals$year, state_totals$pcthisp, type = "l", ylim=c(0, max(state_totals$pcthisp)))
lines(sf$year, sf$pcthisp)
pcthisp
plot(state_totals$year, state_totals$pcthispanic, main="California percent hispanic", type = "l", ylim=c(0, max(state_totals$pcthisp), col = "red"))
plot(state_totals$year, state_totals$pcthispanic, main="California percent hispanic", type = "l", ylim=c(0, max(state_totals$pcthisp)), col = "red")
#selected county
county_name <- "San Francisco"
#filter
this_county <- subset(data, county == county_name)
#sort
this_county <- this_county[order(this_county$year),]
#initial plot command, with state totals in red
plot(state_totals$year, state_totals$pcthispanic, main="Calif. pct Hispanic", ylim=c(0,max(data$pcthispanic)), type="l", col="red", lwd=2)
#this county.
lines(this_county$year, this_county$pcthispanic)
plot_lines_for_county <- function(county){}
plot_lines_for_county <- function(county) {
county_name <- county
this_county <- subset(data, county == county_name)
this_county <- this_county[order(this_county$year),]
lines(this_county$year, this_county$pcthispanic)
}
plot(state_totals$year, state_totals$pcthispanic, main="Calif. pct Hispanic", ylim=c(0,max(data$pcthispanic)), type="l", col="red", lwd=2)
plot_lines_for_county("Los Angeles")
state_totals$pcthisp <- state_totals$tot_hisp_pop/state_totals$tot_ca_pop
sf
install.packages("maptools")
library(maptools)
shapes <- readShapePoly("shapes/ca/counties.shp")
plot(shapes)
axis(1)
title("I love maps")
data.frame(shapes)
plot(shapes, col=rainbow(100))
map_data <- data.frame(shapes)
map_data
y2010 <- subset(data, year == 2010)
head(y2010)
head(map_data, n=2)
dim(y2010)
dim(map_data)
data$FIPS <- sprintf("%05d",data$fips)
y2010$FIPS <- sprintf("%05d",data$fips)
y2010$FIPS <- sprintf("%05d",y2010$fips)
y2010
head(y2010)
names(y2010)
match(map_data$FIPS,y2010$FIPS)
map_data$FIPS
y2010$FIPS
match(map_data$FIPS,y2010$FIPS)
match_order <- match(map_data$FIPS,y2010$FIPS)
